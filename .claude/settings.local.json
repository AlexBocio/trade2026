{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(mkdir:*)",
      "Read(//c/ClaudeDesktop_Projects/ClaudeKnowledge/**)",
      "Bash(docker-compose:*)",
      "Bash(docker network create:*)",
      "Bash(docker network:*)",
      "Bash(docker ps:*)",
      "Bash(xargs -r docker stop)",
      "Bash(docker run:*)",
      "Bash(docker exec:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Read(//c/ClaudeDesktop_Projects/Trade2026/**)",
      "Bash(test:*)",
      "Read(//c/Trade2025/**)",
      "Bash(docker container prune:*)",
      "Bash(docker logs:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(docker inspect:*)",
      "Bash(/dev/null)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(xargs -I {} bash -c 'if [ {} -eq 8 ]; then echo \"\"\"\"✅ All 8 core services running\"\"\"\"; else echo \"\"\"\"❌ Only {}/8 services running\"\"\"\"; fi')",
      "Bash(echo:*)",
      "Bash(xargs -I {} bash -c 'if [ {} -eq 6 ]; then echo \"\"\"\"✅ All 6 data subdirectories exist\"\"\"\"; else echo \"\"\"\"⚠️  Only {} data subdirectories found\"\"\"\"; fi')",
      "Bash(xargs -I {} bash -c 'if [ {} -eq 3 ]; then echo \"\"\"\"✅ 3 networks defined\"\"\"\"; else echo \"\"\"\"❌ Only {} networks defined\"\"\"\"; fi')",
      "Bash(xargs -I {} bash -c 'if [ {} -eq 3 ]; then echo \"\"\"\"✅ All 3 networks created\"\"\"\"; else echo \"\"\"\"⚠️  Only {} networks exist (may need creation)\"\"\"\"; fi')",
      "Bash(xargs -I {} bash -c 'if [ {} -eq 8 ]; then echo \"\"\"\"✅ All 8 core services running\"\"\"\"; else echo \"\"\"\"⚠️  {} services running (some may be stopped)\"\"\"\"; fi')",
      "Bash(for service in gateway oms risk exeq ptrc pnl normalizer)",
      "Bash(do echo \"=== $service ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(docker build:*)",
      "Bash(localhost/normalizer:latest)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(docker start:*)",
      "Bash(localhost/sink-ticks:latest)",
      "Bash(docker restart:*)",
      "Bash(localhost/sink-alt:latest)",
      "Bash(localhost/gateway:latest)",
      "Bash(localhost/live-gateway:latest)",
      "Bash(python:*)",
      "Bash(natsio/nats-box:latest )",
      "Bash(docker cp:*)",
      "Bash(git init:*)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  }
}

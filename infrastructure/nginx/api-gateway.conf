# Trade2026 Unified API Gateway
# Single entry point for all backend services
# All services communicate internally via Docker network

# Upstream definitions - Internal service addresses
upstream portfolio_optimizer {
    server trade2026-portfolio-optimizer:5001 max_fails=3 fail_timeout=30s;
}

upstream rl_trading {
    server trade2026-rl-trading:5002 max_fails=3 fail_timeout=30s;
}

upstream advanced_backtest {
    server trade2026-advanced-backtest:5003 max_fails=3 fail_timeout=30s;
}

upstream factor_models {
    server trade2026-factor-models:5004 max_fails=3 fail_timeout=30s;
}

upstream simulation_engine {
    server trade2026-simulation-engine:5005 max_fails=3 fail_timeout=30s;
}

upstream fractional_diff {
    server trade2026-fractional-diff:5006 max_fails=3 fail_timeout=30s;
}

upstream meta_labeling {
    server trade2026-meta-labeling:5007 max_fails=3 fail_timeout=30s;
}

upstream stock_screener {
    server trade2026-stock-screener:5000 max_fails=3 fail_timeout=30s;
}

# Upstream market_gateway disabled - waiting for IB Gateway
# upstream market_gateway {
#     server trade2026-gateway:8080 max_fails=3 fail_timeout=30s;
# }

upstream oms_service {
    server trade2026-oms:8099 max_fails=3 fail_timeout=30s;
}

upstream risk_service {
    server trade2026-risk:8103 max_fails=3 fail_timeout=30s;
}

upstream ptrc_service {
    server trade2026-ptrc:8109 max_fails=3 fail_timeout=30s;
}

# Upstream live_gateway disabled - waiting for IB Gateway
# upstream live_gateway {
#     server trade2026-live-gateway:8200 max_fails=3 fail_timeout=30s;
# }

upstream data_ingestion {
    server trade2026-data-ingestion:8500 max_fails=3 fail_timeout=30s;
}

# Main server block
server {
    listen 80;
    server_name localhost trade2026.local;

    # Increase buffer sizes for large API responses
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    # Enable compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types application/json application/javascript text/css text/plain;

    # CORS headers (for frontend access)
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle preflight requests - DISABLED (nginx limitation with add_header in if blocks at server level)
    # if ($request_method = 'OPTIONS') {
    #     add_header 'Access-Control-Allow-Origin' '*';
    #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
    #     add_header 'Access-Control-Max-Age' 1728000;
    #     add_header 'Content-Type' 'text/plain; charset=utf-8';
    #     add_header 'Content-Length' 0;
    #     return 204;
    # }

    # ========================================================================
    # BACKEND ANALYTICS SERVICES (Python Flask - Port 5000 internally)
    # ========================================================================

    # Portfolio Optimizer API
    location /api/portfolio/ {
        proxy_pass http://trade2026-portfolio-optimizer:5000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-portfolio-optimizer";
    }

    # RL Trading API
    location /api/rl/ {
        proxy_pass http://rl_trading/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-rl-trading";
    }

    # Advanced Backtest API
    location /api/backtest/ {
        proxy_pass http://advanced_backtest/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-advanced-backtest";
    }

    # Factor Models API
    location /api/factors/ {
        proxy_pass http://factor_models/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-factor-models";
    }

    # Simulation Engine API
    location /api/simulation/ {
        proxy_pass http://simulation_engine/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-simulation-engine";
    }

    # Fractional Differentiation API
    location /api/fracdiff/ {
        proxy_pass http://fractional_diff/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-fractional-diff";
    }

    # Meta-Labeling API
    location /api/metalabel/ {
        proxy_pass http://meta_labeling/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-meta-labeling";
    }

    # Stock Screener API (includes alpha methods)
    location /api/screener/ {
        proxy_pass http://stock_screener/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-stock-screener";
    }

    # Alpha Methods (routed to trade2026-stock-screener)
    location /api/alpha/ {
        proxy_pass http://stock_screener/api/alpha/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-stock-screener";
    }

    # Regime Detection (routed to trade2026-stock-screener)
    location /api/regime/ {
        proxy_pass http://stock_screener/api/regime/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "trade2026-stock-screener";
    }

    # ========================================================================
    # CORE TRADING PLATFORM SERVICES
    # ========================================================================

    # Market Data Gateway - DISABLED (waiting for IB Gateway)
    # location /api/market/ {
    #     proxy_pass http://market_gateway/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Service "gateway";
    #
    #     # WebSocket support for real-time data
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # Order Management System
    location /api/orders/ {
        proxy_pass http://oms_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "oms";
    }

    # Risk Management
    location /api/risk/ {
        proxy_pass http://risk_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "risk";
    }

    # P&L Tracking & Reporting
    location /api/pnl/ {
        proxy_pass http://ptrc_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "ptrc";
    }

    # Live Order Gateway (Exchange Routing) - DISABLED (waiting for IB Gateway)
    # location /api/live/ {
    #     proxy_pass http://live_gateway/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Service "live-gateway";
    #
    #     # WebSocket support for order updates
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # Data Ingestion (IBKR + FRED)
    location /api/data/ {
        proxy_pass http://data_ingestion/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service "data-ingestion";
    }

    # ========================================================================
    # GATEWAY HEALTH & STATUS
    # ========================================================================

    # Gateway health check
    location /health {
        access_log off;
        return 200 "Healthy\n";
        add_header Content-Type text/plain;
    }

    # Service discovery endpoint - returns all available services
    location /api/services {
        default_type application/json;
        return 200 '{
            "services": [
                {"name": "trade2026-portfolio-optimizer", "path": "/api/portfolio", "status": "available"},
                {"name": "trade2026-rl-trading", "path": "/api/rl", "status": "available"},
                {"name": "trade2026-advanced-backtest", "path": "/api/backtest", "status": "available"},
                {"name": "trade2026-factor-models", "path": "/api/factors", "status": "available"},
                {"name": "trade2026-simulation-engine", "path": "/api/simulation", "status": "available"},
                {"name": "trade2026-fractional-diff", "path": "/api/fracdiff", "status": "available"},
                {"name": "trade2026-meta-labeling", "path": "/api/metalabel", "status": "available"},
                {"name": "trade2026-stock-screener", "path": "/api/screener", "status": "available"},
                {"name": "alpha-methods", "path": "/api/alpha", "status": "available"},
                {"name": "regime-detection", "path": "/api/regime", "status": "available"},
                {"name": "market-gateway", "path": "/api/market", "status": "available"},
                {"name": "oms", "path": "/api/orders", "status": "available"},
                {"name": "risk", "path": "/api/risk", "status": "available"},
                {"name": "ptrc", "path": "/api/pnl", "status": "available"},
                {"name": "live-gateway", "path": "/api/live", "status": "available"},
                {"name": "data-ingestion", "path": "/api/data", "status": "available"}
            ],
            "gateway_version": "1.0.0",
            "timestamp": "$date_gmt"
        }';
    }

    # Catch-all for undefined routes
    location / {
        return 404 '{"error": "Route not found. See /api/services for available endpoints"}';
        add_header Content-Type application/json;
    }
}

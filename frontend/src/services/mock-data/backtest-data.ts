/**
 * Mock backtest data - 10 backtest results
 */

import type { Backtest, BacktestResults } from '../../types/strategy.types';

export const mockBacktests: Backtest[] = [
  {
    id: 'bt-001',
    strategyId: 'strat-001',
    strategyName: 'Momentum Breakout Pro',
    status: 'COMPLETED',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 750,
    finalCapital: 1009.20,
    parameters: {
      timeframe: '5m',
      lookbackPeriod: 20,
      entryThreshold: 2.5,
      exitThreshold: -1.0,
      stopLoss: 2.0,
      takeProfit: 5.0,
      maxPositionSize: 1000,
      maxPositions: 4,
      riskPerTrade: 1.5,
    },
    createdAt: new Date('2024-12-31T18:00:00Z'),
    completedAt: new Date('2024-12-31T18:45:00Z'),
  },
  {
    id: 'bt-002',
    strategyId: 'strat-002',
    strategyName: 'Mean Reversion Alpha',
    status: 'COMPLETED',
    startDate: new Date('2024-06-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 1125,
    finalCapital: 1420.88,
    parameters: {
      timeframe: '15m',
      lookbackPeriod: 50,
      entryThreshold: -2.0,
      exitThreshold: 0.5,
      stopLoss: 3.0,
      takeProfit: 4.0,
      maxPositionSize: 500,
      maxPositions: 3,
      riskPerTrade: 2.0,
    },
    createdAt: new Date('2024-12-30T10:00:00Z'),
    completedAt: new Date('2024-12-30T11:20:00Z'),
  },
  {
    id: 'bt-003',
    strategyId: 'strat-003',
    strategyName: 'Sector Rotation ETF',
    status: 'COMPLETED',
    startDate: new Date('2023-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 1500,
    finalCapital: 2092.05,
    parameters: {
      timeframe: '1d',
      lookbackPeriod: 200,
      entryThreshold: 1.5,
      exitThreshold: -0.5,
      stopLoss: 5.0,
      takeProfit: 15.0,
      maxPositionSize: 5000,
      maxPositions: 5,
      riskPerTrade: 3.0,
    },
    createdAt: new Date('2024-12-28T14:00:00Z'),
    completedAt: new Date('2024-12-28T16:30:00Z'),
  },
  {
    id: 'bt-004',
    strategyId: 'strat-004',
    strategyName: 'Gap Fill Scalper',
    status: 'COMPLETED',
    startDate: new Date('2024-09-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 375,
    finalCapital: 392.55,
    parameters: {
      timeframe: '1m',
      lookbackPeriod: 10,
      entryThreshold: 1.0,
      exitThreshold: -0.3,
      stopLoss: 1.5,
      takeProfit: 2.5,
      maxPositionSize: 200,
      maxPositions: 2,
      riskPerTrade: 1.0,
    },
    createdAt: new Date('2024-12-27T09:00:00Z'),
    completedAt: new Date('2024-12-27T09:15:00Z'),
  },
  {
    id: 'bt-005',
    strategyId: 'strat-001',
    strategyName: 'Momentum Breakout Pro (Alt Params)',
    status: 'COMPLETED',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 750,
    finalCapital: 891.90,
    parameters: {
      timeframe: '5m',
      lookbackPeriod: 30,
      entryThreshold: 3.0,
      exitThreshold: -1.5,
      stopLoss: 2.5,
      takeProfit: 6.0,
      maxPositionSize: 800,
      maxPositions: 3,
      riskPerTrade: 1.0,
    },
    createdAt: new Date('2024-12-26T11:00:00Z'),
    completedAt: new Date('2024-12-26T11:50:00Z'),
  },
  {
    id: 'bt-006',
    strategyId: 'strat-002',
    strategyName: 'Mean Reversion Alpha (Conservative)',
    status: 'COMPLETED',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-06-30'),
    initialCapital: 750,
    finalCapital: 844.20,
    parameters: {
      timeframe: '15m',
      lookbackPeriod: 40,
      entryThreshold: -1.5,
      exitThreshold: 0.3,
      stopLoss: 2.0,
      takeProfit: 3.0,
      maxPositionSize: 400,
      maxPositions: 2,
      riskPerTrade: 1.5,
    },
    createdAt: new Date('2024-12-25T15:00:00Z'),
    completedAt: new Date('2024-12-25T15:30:00Z'),
  },
  {
    id: 'bt-007',
    strategyId: 'template-001',
    strategyName: 'SMA Crossover Test',
    status: 'COMPLETED',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 750,
    finalCapital: 812.55,
    parameters: {
      timeframe: '1d',
      lookbackPeriod: 50,
      entryThreshold: 1.0,
      exitThreshold: -1.0,
      stopLoss: 3.0,
      takeProfit: 6.0,
      maxPositionSize: 1000,
      maxPositions: 5,
      riskPerTrade: 2.0,
    },
    createdAt: new Date('2024-12-24T10:00:00Z'),
    completedAt: new Date('2024-12-24T12:00:00Z'),
  },
  {
    id: 'bt-008',
    strategyId: 'template-002',
    strategyName: 'RSI Reversal Backtest',
    status: 'FAILED',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 750,
    finalCapital: 750,
    parameters: {
      timeframe: '15m',
      lookbackPeriod: 14,
      entryThreshold: -2.0,
      exitThreshold: 0.0,
      stopLoss: 2.0,
      takeProfit: 4.0,
      maxPositionSize: 500,
      maxPositions: 3,
      riskPerTrade: 1.5,
    },
    createdAt: new Date('2024-12-23T14:00:00Z'),
  },
  {
    id: 'bt-009',
    strategyId: 'strat-005',
    strategyName: 'Crypto Momentum Test',
    status: 'COMPLETED',
    startDate: new Date('2024-10-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 375,
    finalCapital: 324.08,
    parameters: {
      timeframe: '1h',
      lookbackPeriod: 24,
      entryThreshold: 3.0,
      exitThreshold: -1.5,
      stopLoss: 4.0,
      takeProfit: 8.0,
      maxPositionSize: 0.5,
      maxPositions: 2,
      riskPerTrade: 2.5,
    },
    createdAt: new Date('2024-12-22T16:00:00Z'),
    completedAt: new Date('2024-12-22T16:30:00Z'),
  },
  {
    id: 'bt-010',
    strategyId: 'strat-001',
    strategyName: 'Momentum Breakout Pro (Aggressive)',
    status: 'RUNNING',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    initialCapital: 750,
    finalCapital: 750,
    parameters: {
      timeframe: '5m',
      lookbackPeriod: 15,
      entryThreshold: 2.0,
      exitThreshold: -0.5,
      stopLoss: 1.5,
      takeProfit: 4.0,
      maxPositionSize: 1200,
      maxPositions: 5,
      riskPerTrade: 2.5,
    },
    createdAt: new Date('2025-10-08T08:00:00Z'),
  },
];

// Sample detailed results for bt-001 (Small account: $750 initial capital)
export const mockBacktestResults: BacktestResults = {
  performance: {
    totalTrades: 423,
    winningTrades: 245,
    losingTrades: 178,
    winRate: 57.92,
    totalPnL: 259.20,
    avgWin: 2.34,
    avgLoss: -1.49,
    profitFactor: 1.93,
    sharpeRatio: 2.12,
    maxDrawdown: -63.42,
    maxDrawdownPercent: -11.24,
    returnPercent: 34.56,
  },
  trades: [
    {
      id: 'trade-001',
      symbol: 'AAPL',
      entryDate: new Date('2024-01-05T09:35:00Z'),
      exitDate: new Date('2024-01-05T14:20:00Z'),
      entryPrice: 182.34,
      exitPrice: 186.92,
      quantity: 1,
      side: 'LONG',
      pnl: 3.44,
      pnlPercent: 2.51,
      holdingPeriod: 0.2,
      commission: 0.02,
    },
    {
      id: 'trade-002',
      symbol: 'NVDA',
      entryDate: new Date('2024-01-08T10:15:00Z'),
      exitDate: new Date('2024-01-08T15:45:00Z'),
      entryPrice: 489.23,
      exitPrice: 502.15,
      quantity: 1,
      side: 'LONG',
      pnl: 4.85,
      pnlPercent: 2.64,
      holdingPeriod: 0.2,
      commission: 0.01,
    },
    {
      id: 'trade-003',
      symbol: 'META',
      entryDate: new Date('2024-01-12T09:45:00Z'),
      exitDate: new Date('2024-01-12T11:30:00Z'),
      entryPrice: 305.67,
      exitPrice: 301.23,
      quantity: 1,
      side: 'LONG',
      pnl: -2.50,
      pnlPercent: -1.45,
      holdingPeriod: 0.1,
      commission: 0.01,
    },
  ],
  equityCurve: [
    { date: new Date('2024-01-01'), equity: 750.00, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-01-31'), equity: 775.88, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-02-29'), equity: 808.65, drawdown: -9.23, drawdownPercent: -1.14 },
    { date: new Date('2024-03-31'), equity: 834.23, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-04-30'), equity: 859.20, drawdown: -17.55, drawdownPercent: -2.04 },
    { date: new Date('2024-05-31'), equity: 891.90, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-06-30'), equity: 917.55, drawdown: -11.70, drawdownPercent: -1.27 },
    { date: new Date('2024-07-31'), equity: 888.38, drawdown: -29.18, drawdownPercent: -3.18 },
    { date: new Date('2024-08-31'), equity: 927.53, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-09-30'), equity: 959.18, drawdown: -17.55, drawdownPercent: -1.83 },
    { date: new Date('2024-10-31'), equity: 984.23, drawdown: 0, drawdownPercent: 0 },
    { date: new Date('2024-11-30'), equity: 970.88, drawdown: -13.35, drawdownPercent: -1.36 },
    { date: new Date('2024-12-31'), equity: 1009.20, drawdown: 0, drawdownPercent: 0 },
  ],
  metrics: {
    totalReturn: 259.20,
    annualizedReturn: 34.56,
    volatility: 16.32,
    sharpeRatio: 2.12,
    sortinoRatio: 3.45,
    calmarRatio: 3.08,
    maxDrawdown: -63.42,
    maxDrawdownPercent: -11.24,
    winRate: 57.92,
    profitFactor: 1.93,
    avgWin: 2.34,
    avgLoss: -1.49,
    avgTrade: 0.61,
    bestTrade: 9.34,
    worstTrade: -6.69,
    avgHoldingPeriod: 0.15,
    totalTrades: 423,
    winningTrades: 245,
    losingTrades: 178,
    totalCommissions: 4.76,
  },
  monthlyReturns: [
    { month: '2024-01', return: 25.88, returnPercent: 3.45 },
    { month: '2024-02', return: 32.78, returnPercent: 4.22 },
    { month: '2024-03', return: 25.58, returnPercent: 3.16 },
    { month: '2024-04', return: 24.98, returnPercent: 2.99 },
    { month: '2024-05', return: 32.70, returnPercent: 3.81 },
    { month: '2024-06', return: 25.65, returnPercent: 2.88 },
    { month: '2024-07', return: -29.18, returnPercent: -3.18 },
    { month: '2024-08', return: 39.15, returnPercent: 4.41 },
    { month: '2024-09', return: 31.65, returnPercent: 3.41 },
    { month: '2024-10', return: 25.05, returnPercent: 2.61 },
    { month: '2024-11', return: -13.35, returnPercent: -1.36 },
    { month: '2024-12', return: 38.33, returnPercent: 3.95 },
  ],
};

// Monte Carlo simulation data generator
export function generateMonteCarloData(trades: any[], numSimulations: number = 1000) {
  const simulations = [];

  for (let i = 0; i < numSimulations; i++) {
    const shuffledTrades = [...trades].sort(() => Math.random() - 0.5);
    let equity = 750; // Starting capital
    const equityCurve = [equity];

    shuffledTrades.forEach(trade => {
      equity += trade.pnl;
      equityCurve.push(equity);
    });

    simulations.push({
      simulationId: i,
      equityCurve,
    });
  }

  // Calculate percentiles
  const numTrades = trades.length;
  const percentiles = {
    p5: [] as number[],
    p25: [] as number[],
    p50: [] as number[],
    p75: [] as number[],
    p95: [] as number[],
  };

  for (let i = 0; i <= numTrades; i++) {
    const values = simulations.map(s => s.equityCurve[i]).sort((a, b) => a - b);
    percentiles.p5.push(values[Math.floor(numSimulations * 0.05)]);
    percentiles.p25.push(values[Math.floor(numSimulations * 0.25)]);
    percentiles.p50.push(values[Math.floor(numSimulations * 0.50)]);
    percentiles.p75.push(values[Math.floor(numSimulations * 0.75)]);
    percentiles.p95.push(values[Math.floor(numSimulations * 0.95)]);
  }

  return { simulations, percentiles };
}
